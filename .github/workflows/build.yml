name: Build and Release

on:
  push:
    branches: [ 1.20.1-dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ 1.20.1-dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: List build output
        run: |
          echo "Contents of build directory:"
          ls -la build/ || echo "build directory not found"
          echo "Contents of build/libs directory:"
          ls -la build/libs/ || echo "build/libs directory not found"
          echo "Looking for JAR files:"
          find . -name "*.jar" -type f || echo "No JAR files found"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mod-jars
          path: build/libs/*.jar
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Debug release trigger
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref name: ${{ github.ref_name }}"
          echo "GitHub event name: ${{ github.event_name }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: mod-jars
          path: ./artifacts/

      - name: List downloaded artifacts
        run: |
          echo "Contents of artifacts directory:"
          ls -la ./artifacts/ || echo "artifacts directory not found"
          echo "Looking for JAR files in artifacts:"
          find ./artifacts/ -name "*.jar" -type f || echo "No JAR files found in artifacts"

      - name: Get version from tag
        id: get_version
        run: |
          # 移除 refs/tags/ 前缀，如果有 v 前缀也移除
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "EnchantmentLevelBreak v${{ steps.get_version.outputs.VERSION }}"
          body: |
            ## EnchantmentLevelBreak v${{ steps.get_version.outputs.VERSION }}

            ### 📦 下载
            - **Minecraft版本**: 1.20.1
            - **Forge版本**: 47.1.3+
            - **Java版本**: 17+

            ### 🔧 安装方法
            1. 确保已安装Minecraft 1.20.1和Forge 47.1.3+
            2. 下载下方的JAR文件
            3. 将JAR文件放入`mods`文件夹
            4. 启动游戏

            ### ✨ 主要功能
            - 突破附魔等级限制，最高可达2147483647级
            - 提供`/cenchant`命令进行高等级附魔
            - 可配置的附魔行为（原版叠加、完全叠加等）
            - 支持任意附魔书应用到任意物品（可配置）

            ### 📋 更新日志
            请查看提交历史了解详细更改内容。
          files: ./artifacts/*.jar
          draft: false
          prerelease: false