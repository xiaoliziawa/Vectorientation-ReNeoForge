name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: List build output
        run: |
          echo "Contents of build directory:"
          ls -la build/ || echo "build directory not found"
          echo "Contents of build/libs directory:"
          ls -la build/libs/ || echo "build/libs directory not found"
          echo "Looking for JAR files:"
          find . -name "*.jar" -type f || echo "No JAR files found"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mod-jars
          path: build/libs/*.jar
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Debug release trigger
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref name: ${{ github.ref_name }}"
          echo "GitHub event name: ${{ github.event_name }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: mod-jars
          path: ./artifacts/

      - name: List downloaded artifacts
        run: |
          echo "Contents of artifacts directory:"
          ls -la ./artifacts/ || echo "artifacts directory not found"
          echo "Looking for JAR files in artifacts:"
          find ./artifacts/ -name "*.jar" -type f || echo "No JAR files found in artifacts"

      - name: Get version from tag
        id: get_version
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Vectorientation v${{ steps.get_version.outputs.VERSION }}"
          body: |
            ## Vectorientation v${{ steps.get_version.outputs.VERSION }}

            ### 📦 下载
            - **Minecraft版本**: 1.21.1
            - **NeoForge版本**: 21.1.194+
            - **Java版本**: 21+

            ### 🔧 安装方法
            1. 确保已安装Minecraft 1.21.1和NeoForge 21.1.194+
            2. 下载下方的JAR文件
            3. 将JAR文件放入`mods`文件夹
            4. 启动游戏

            ### ✨ 主要功能
            - **方块旋转效果**: 掉落方块会根据运动方向旋转和拉伸
            - **活塞头动画**: 活塞伸缩时的Q弹效果
            - **粘液块弹跳**: 玩家掉落到粘液块上时的视觉效果
            - **TNT旋转**: TNT实体的动态旋转效果
            - **矿车效果**: 矿车在空中时的旋转动画
            - **可配置选项**: 支持开关各种效果和调整参数

            ### ⚙️ 配置选项
            - `squetch`: 启用/禁用拉伸效果
            - `pistons`: 启用/禁用活塞效果
            - `slime_blocks`: 启用/禁用粘液块弹跳效果
            - `minecarts`: 启用/禁用矿车效果
            - `min_warp` & `warp_factor`: 调整拉伸强度
            - `blacklist`: 排除特定方块

            ### 📋 更新日志
            - 将Fabric版本port到NeoForge
          files: ./artifacts/*.jar
          draft: false
          prerelease: false